name: check

on:
  push:
    branches:
      - main
      - release-*
  pull_request: { }

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

jobs:

  go-mod:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.19.5
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check module vendoring
        run: |
          go mod tidy
          go mod vendor
          git diff --exit-code || (echo "please run 'go mod tidy && go mod vendor', and submit your changes"; exit 1)

  go-lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.19.5
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: v1.55.2
          args: --timeout 300s --skip-dirs test/skoop/e2e --skip-dirs-use-default -v -E goconst -E gofmt -E ineffassign -E goimports -E revive -E misspell -E vet -E deadcode

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@1.1.0
        env:
          SHELLCHECK_OPTS: -e SC2236,SC2162,SC2268,SC1091
        with:
          ignore: tests hack

  super-linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter@v4.8.5
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_MARKDOWN: true
          VALIDATE_MD: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check-bpf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "17.0"
          directory: ${{ runner.temp }}/llvm
      - name: build-bpf
        run: |
          make generate-bpf-in-container
      - name: check-bpf-update
        run: |
          for bpfobjfile in `git status --porcelain | awk '{print $2}'`; do
            echo "check $bpfobjfile prog sections changes by remove .BTF debug section"
            git show HEAD:$bpfobjfile > ${bpfobjfile}.old
            if llvm-objdump --headers $bpfobjfile &>/dev/null; then
              llvm-objcopy --remove-section '.BTF' ${bpfobjfile}.old
              llvm-objcopy --remove-section '.BTF' $bpfobjfile
              if ! diff ${bpfobjfile}.old $bpfobjfile; then
                echo "$bpfobjfile changed; Please run 'make generate-bpf-in-container' and submit your changes"
                exit 1
              fi
            fi
            rm -f ${bpfobjfile}.old
          done
