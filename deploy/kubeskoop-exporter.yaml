apiVersion: v1
kind: Namespace
metadata:
  name: kubeskoop
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: skoop-exporter
  namespace: kubeskoop
  labels:
    app: skoop-exporter
spec:
  selector:
    matchLabels:
      app: skoop-exporter
  template:
    metadata:
      labels:
        app: skoop-exporter
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9102"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      name: skoop-exporter
    spec:
      hostNetwork: true
      hostPID: true
      hostIPC: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: inspector-prepare
          image: registry.cn-hangzhou.aliyuncs.com/acs/btfhack:latest
          volumeMounts:
            - name: btf-rawdata
              mountPath: /etc/net-exporter/btf
            - mountPath: /boot/
              name: boot
          command: [btfhack, discover, -p, /etc/net-exporter/btf/]
      containers:
        - image: "registry.cn-hangzhou.aliyuncs.com/acs/inspector:v0.1.0-16-gc8eeb09-aliyun"
          name: inspector
          env:
            - name: INSPECTOR_NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config/
            - name: btf-rawdata
              mountPath: /etc/net-exporter/btf
            - name: proc
              mountPath: /proc
            - mountPath: /run/containerd/
              name: containerd
            - mountPath: /var/run/
              name: dockershim
            - mountPath: /sys/fs/bpf
              name: bpf-maps
              mountPropagation: HostToContainer
            - mountPath: /sys/fs/cgroup
              name: cgroup
              mountPropagation: HostToContainer
            - mountPath: /sys/kernel/debug
              name: bpf-events
              mountPropagation: HostToContainer
            - mountPath: /etc/node-hostname
              name: hostname
          command: [/bin/inspector, server, -d]
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 1000m
              memory: 1000Mi
            limits:
              cpu: 1000m
              memory: 2000Mi
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: containerd
          hostPath:
            path: /run/containerd/
        - name: boot
          hostPath:
            path: /boot/
        - name: dockershim
          hostPath:
            path: /var/run/
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cgroup
        - hostPath:
            path: /sys/kernel/debug
          name: bpf-events
        - name: hostname
          hostPath:
            path: /etc/hostname
            type: FileOrCreate
        - name: config-volume
          configMap:
            name: inspector-config
        - name: btf-rawdata
          emptyDir: {}
---
apiVersion: v1
data:
  config.yaml: |-
    debugmode: true
    metric_config:
      interval: 15
      port: 9102
      probes:
      - netdev
      - io
      - socketlatency
      - packetloss
      - sched
      - sock
      - tcpsummary
      - tcp
      - tcpext
      - udp
      - softnet
      - net_softirq
      - kernellatency
      - virtcmdlatency
    event_config:
      port: 19102
      loki_enable: true
      loki_address: "grafana-loki-service.kubeskoop.svc"
      probes:
      - tcpreset
      - packetloss
      - socketlatency
      - net_softirq
      - kernellatency
      - virtcmdlatency
kind: ConfigMap
metadata:
  name: inspector-config
  namespace: kubeskoop
